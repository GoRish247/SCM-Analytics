install.packages("inventorize")
lirbary(inventorize)
library(inventorize)
a <- (data.frame(SKU= seq(1:1000),demand=runif(1000,1,1000)))
a
ABC(a)
head(a)
head(b)
getwd()
getwd()
train <- read.csv('C:\\Users\\rgohi\\Documents\\GitHub\\SCM-Analytics\\SCMAnalytics\\Data\\train.csv')
head(train)
View(train)
library(keras)
library(tensorflow)
install.packages('keras')
install.packages("tensorflow")
library(keras)
library(tensorflow)
library(forecast)
install.packages("forecast")
library(forecast)
test <- read.csv('C:\\Users\\rgohi\\Documents\\GitHub\\SCM-Analytics\\SCMAnalytics\\Data\\test.csv')
head(test)
head(train)
library(dplyr)
train_item1 <- train %>% filter(item == 1)
nrow(train_item1)
nrow(trian)
nrow(train)
View(train_item1)
ceiling(.8*nrow(train_item1))
train1 <- train_item1[0:ceiling(.8*nrow(train_item1)),]
validate <- train_item1[ceiling(.8*nrow(train_item1))+1:nrow(train_item1),]
ceiling(.8*nrow(train_item1))+1
nrow(train_item1)
validate <- train_item1[(ceiling(.8*nrow(train_item1))+1):nrow(train_item1),]
?ts
print( ts(train1, frequency = 7, start = c(12, 2)), calendar = TRUE)
print( ts(train1, frequency = 7, start = c(12, 2)), calendar = TRUE) %>% head()
train1 %>% head()
print( ts(train1, frequency = 7, start = c(2013, 1)), calendar = TRUE) %>% head()
train1 %>% head()
print( ts(train1, frequency = 7, start = c(2013, 1)), calendar = TRUE) %>% head(10)
print( ts(train1, frequency = 7, start = c(2013, 1)), calendar = TRUE) %>% head(1:10)
print( ts(train1, frequency = 7, start = c(2013, 1)), calendar = TRUE) %>% head(10)
train1 %>% head()
train1 %>% head(10)
print( ts(train1, frequency = 7, start = c(1, 1)), calendar = TRUE) %>% head(10)
train1 %>% head(10)
a <- ts(train1, frequency = 7, start = c(1, 1)), calendar = TRUE)
a <- ts(train1, frequency = 7, start = c(1, 1), calendar = TRUE)
a <- ts(train1, frequency = 7, start = c(1, 1))
plot(myts)
plot(a)
b <- window(a, start=c(2014, 6), end=c(2014, 12))
b
print( ts(train1, frequency = 52, start = c(1, 1), calendar = TRUE) %>% head(10)
print(ts(train1, frequency = 52, start = c(1, 1), calendar = TRUE) %>% head(10))
print(ts(train1, frequency = 52, start = c(1, 1), calendar = TRUE))
print(ts(train1, frequency = 52, start = c(1, 1)))
print(ts(train1, frequency = 7, start = c(1, 1)))
print(ts(train1, frequency = 365.25, start = c(1, 1))) #for annual seasonality; 7 for weekly seasonality
a <- ts(train1, frequency = 365.25, start = c(1, 1))
b <- window(a, start=c(2014, 6), end=c(2014, 12))
plot(a)
sales <- (ts(train1, frequency = 365.25, start = c(1, 1))) #for annual seasonality; 7 for weekly seasonality
sales %>% head()
View(sales)
q95<-quantile(sales,0.95)
q95
withoutblank<-(complete.cases(sales))
withoutblank
ns <-ndiffs(withoutblank, max.d=2)
ns
tsdisplay(sales)
adf.test(sales)
lambda=BoxCox.lambda(sales,lower=0)
lambda
data(lynx)
a <- data(lynx)
install.packages("fable")
library(fable)
